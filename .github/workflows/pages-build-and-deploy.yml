name: pages build and deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository (no submodules)
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0

      - name: Prevent submodule init / recover BookMatch if gitlink
        run: |
          git submodule deinit --all || true
          git submodule sync --recursive || true

          if [ -f .gitmodules ]; then
            git config -f .gitmodules --remove-section "submodule.BookMatch" || true
          fi

          if git ls-tree -r HEAD | grep -q "160000 .* BookMatch"; then
            echo "Detected BookMatch as a gitlink. Attempting to checkout files from origin/main..."
            git fetch origin main --depth=1 || true
            git checkout origin/main -- BookMatch || true
          else
            echo "BookMatch not a gitlink or already present as files."
          fi

      - name: Detect project directory
        id: detect
        run: |
          if [ -f "./BookMatch/package.json" ]; then
            echo "PROJECT_DIR=BookMatch" >> $GITHUB_OUTPUT
          elif [ -f "./package.json" ]; then
            echo "PROJECT_DIR=." >> $GITHUB_OUTPUT
          else
            echo "PROJECT_DIR=." >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ steps.detect.outputs.PROJECT_DIR }}

      - name: Build
        run: npm run build
        working-directory: ${{ steps.detect.outputs.PROJECT_DIR }}

      - name: Diagnostic: show build dir and run id
        run: |
          echo "GITHUB_RUN_ID=$GITHUB_RUN_ID"
          echo "Listing build directory contents:" 
          ls -la "${{ steps.detect.outputs.PROJECT_DIR }}/build" || true
          echo "Querying artifacts for this run via Actions API (raw JSON)"
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${GITHUB_RUN_ID}/artifacts" || true

      - name: Upload production build for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.detect.outputs.PROJECT_DIR }}/build

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v1
